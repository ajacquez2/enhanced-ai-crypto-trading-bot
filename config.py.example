# Enhanced AI Cryptocurrency Trading Bot - Configuration Template
# Copy this file to config.py and fill in your API keys

# =============================================================================
# IMPORTANT SECURITY NOTICE
# =============================================================================
# 1. Copy this file to config.py: cp config.py.example config.py
# 2. Never commit config.py to version control (it's in .gitignore)
# 3. Keep your API keys secure and never share them
# 4. Use environment variables in production
# =============================================================================

# =============================================================================
# AI PROVIDER CONFIGURATION
# =============================================================================

# AI Provider Selection
# Options: "openai", "claude", "demo"
# ALWAYS START WITH "demo" FOR SAFE TESTING!
AI_PROVIDER = "demo"

# OpenAI Configuration
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY = "your-openai-api-key-here"
OPENAI_MODEL = "gpt-4o-mini"  # Options: gpt-4o-mini, gpt-4o, gpt-3.5-turbo
OPENAI_MAX_TOKENS = 1000
OPENAI_TEMPERATURE = 0.7

# Claude/Anthropic Configuration
# Get your API key from: https://console.anthropic.com/
CLAUDE_API_KEY = "your-claude-api-key-here"
CLAUDE_MODEL = "claude-3-5-sonnet-20241022"  # Options: claude-3-5-sonnet-20241022, claude-3-haiku-20240307
CLAUDE_MAX_TOKENS = 1000
CLAUDE_TEMPERATURE = 0.7

# =============================================================================
# TRADING CONFIGURATION
# =============================================================================

# Trading Mode
# Options: "demo", "manual", "auto"
# ALWAYS START WITH "demo" MODE!
MODE = "demo"

# Trading Limits (Start Conservative!)
MAX_BUYING_AMOUNT_USD = 10.0  # Maximum amount per trade
PORTFOLIO_LIMIT = 5  # Maximum number of positions
DAILY_TRADE_LIMIT = 10  # Maximum trades per day

# AI Decision Thresholds
AI_CONFIDENCE_THRESHOLD = 0.7  # Minimum confidence for trades (0.0-1.0)
BUY_THRESHOLD = 0.75  # Confidence needed for buy decisions
SELL_THRESHOLD = 0.8  # Confidence needed for sell decisions

# =============================================================================
# RISK MANAGEMENT
# =============================================================================

# Stop Loss & Take Profit
STOP_LOSS_PERCENTAGE = 5.0  # Stop loss at 5% loss
TAKE_PROFIT_PERCENTAGE = 10.0  # Take profit at 10% gain

# Position Sizing
POSITION_SIZE_PERCENTAGE = 2.0  # Use 2% of portfolio per position
MAX_PORTFOLIO_RISK = 10.0  # Maximum 10% of portfolio at risk

# Pattern Day Trading Protection
PDT_PROTECTION = True  # Prevent PDT violations
MIN_ACCOUNT_VALUE = 25000  # Minimum for unlimited day trading

# =============================================================================
# TECHNICAL ANALYSIS SETTINGS
# =============================================================================

# RSI Settings
RSI_PERIOD = 14
RSI_OVERBOUGHT = 70
RSI_OVERSOLD = 30

# Moving Average Settings
SMA_SHORT_PERIOD = 10
SMA_LONG_PERIOD = 50
EMA_PERIOD = 20

# VWAP Settings
VWAP_PERIOD = 20

# =============================================================================
# WEB DASHBOARD CONFIGURATION
# =============================================================================

# Flask Settings
FLASK_HOST = "127.0.0.1"
FLASK_PORT = 5005
FLASK_DEBUG = False  # Set to True for development
SECRET_KEY = "your-secret-key-here-change-this"

# WebSocket Settings
SOCKETIO_ASYNC_MODE = "threading"
SOCKETIO_CORS_ALLOWED_ORIGINS = "*"

# Dashboard Update Intervals (seconds)
PORTFOLIO_UPDATE_INTERVAL = 30
MARKET_DATA_UPDATE_INTERVAL = 60
AI_ANALYSIS_INTERVAL = 300  # 5 minutes

# =============================================================================
# DATA SOURCES
# =============================================================================

# CoinGecko API (Free tier)
COINGECKO_API_URL = "https://api.coingecko.com/api/v3"
COINGECKO_API_KEY = ""  # Optional for higher rate limits

# Alternative Data Sources (Optional)
ALPHA_VANTAGE_API_KEY = "your-alpha-vantage-key-here"
FINNHUB_API_KEY = "your-finnhub-key-here"

# =============================================================================
# SUPPORTED CRYPTOCURRENCIES
# =============================================================================

# List of supported cryptocurrencies (CoinGecko IDs)
SUPPORTED_CRYPTOS = [
    # Major Cryptocurrencies
    "bitcoin", "ethereum", "litecoin", "bitcoin-cash", "ethereum-classic",
    "dogecoin", "shiba-inu",
    
    # Smart Contract Platforms
    "solana", "cardano", "polkadot", "avalanche-2", "near", "internet-computer",
    "polygon", "cosmos", "flow", "helium",
    
    # DeFi Tokens
    "uniswap", "aave", "compound-governance-token", "maker", "curve-dao-token",
    "balancer", "sushiswap-token", "1inch", "yearn-finance", "bancor",
    
    # Layer 2 & Scaling
    "chainlink", "the-graph", "polygon", "loopring", "kyber-network-crystal",
    
    # Gaming & NFTs
    "axie-infinity", "decentraland", "the-sandbox", "enjincoin", "chiliz",
    
    # Infrastructure
    "filecoin", "aragon", "golem", "basic-attention-token", "civic",
    "district0x", "livepeer", "numeraire", "augur", "gnosis",
    
    # Privacy Coins
    "zcash", "monero",
    
    # Exchange Tokens
    "binancecoin", "crypto-com-chain", "ftx-token",
    
    # Emerging Projects
    "fetch-ai", "ocean-protocol", "singularitynet", "cartesi", "loom-network-new",
    "metal", "nucypher", "omisego", "ontology", "orchid-protocol",
    "origin-protocol", "polymath", "power-ledger", "qtum", "request-network",
    "skale", "status", "stellar", "storj", "tezos", "theta-token",
    "vechain", "zilliqa", "0x", "algorand", "icon"
]

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Logging Settings
LOG_LEVEL = "INFO"  # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FILE = "enhanced_trading.log"
LOG_MAX_SIZE = 10 * 1024 * 1024  # 10MB
LOG_BACKUP_COUNT = 5

# Console Logging
CONSOLE_LOGGING = True
COLORED_LOGS = True

# =============================================================================
# DATABASE CONFIGURATION (Optional)
# =============================================================================

# SQLite Database (Default)
DATABASE_URL = "sqlite:///trading_bot.db"

# PostgreSQL (Production)
# DATABASE_URL = "postgresql://user:password@localhost/trading_bot"

# MySQL (Alternative)
# DATABASE_URL = "mysql://user:password@localhost/trading_bot"

# =============================================================================
# NOTIFICATION SETTINGS (Optional)
# =============================================================================

# Email Notifications
EMAIL_ENABLED = False
SMTP_SERVER = "smtp.gmail.com"
SMTP_PORT = 587
EMAIL_ADDRESS = "your-email@gmail.com"
EMAIL_PASSWORD = "your-app-password"
NOTIFY_EMAIL = "your-notification-email@gmail.com"

# Discord Notifications
DISCORD_ENABLED = False
DISCORD_WEBHOOK_URL = "your-discord-webhook-url"

# Slack Notifications
SLACK_ENABLED = False
SLACK_WEBHOOK_URL = "your-slack-webhook-url"

# =============================================================================
# ADVANCED SETTINGS
# =============================================================================

# Rate Limiting
API_RATE_LIMIT = 100  # Requests per minute
REQUEST_TIMEOUT = 30  # Seconds

# Caching
CACHE_ENABLED = True
CACHE_TTL = 300  # 5 minutes

# Backtesting
BACKTEST_ENABLED = False
BACKTEST_START_DATE = "2023-01-01"
BACKTEST_END_DATE = "2023-12-31"

# Performance Monitoring
PERFORMANCE_MONITORING = True
MEMORY_MONITORING = True

# =============================================================================
# DEMO MODE SETTINGS
# =============================================================================

# Demo Trading Settings
DEMO_STARTING_BALANCE = 1000.0  # Starting balance in USD
DEMO_REALISTIC_DELAYS = True  # Simulate real trading delays
DEMO_MARKET_IMPACT = True  # Simulate market impact on trades

# Demo AI Behavior
DEMO_AI_CONFIDENCE_RANGE = (0.6, 0.9)  # Random confidence range
DEMO_TRADE_FREQUENCY = 0.1  # 10% chance to trade per analysis

# =============================================================================
# ENVIRONMENT VARIABLES (Production)
# =============================================================================

# For production deployment, use environment variables:
# export OPENAI_API_KEY="your-key"
# export CLAUDE_API_KEY="your-key"
# export FLASK_SECRET_KEY="your-secret"
# export DATABASE_URL="your-database-url"

import os

# Override with environment variables if available
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY", OPENAI_API_KEY)
CLAUDE_API_KEY = os.getenv("CLAUDE_API_KEY", CLAUDE_API_KEY)
SECRET_KEY = os.getenv("FLASK_SECRET_KEY", SECRET_KEY)
DATABASE_URL = os.getenv("DATABASE_URL", DATABASE_URL)

# =============================================================================
# VALIDATION
# =============================================================================

# Validate critical settings
if AI_PROVIDER not in ["openai", "claude", "demo"]:
    raise ValueError("AI_PROVIDER must be 'openai', 'claude', or 'demo'")

if MODE not in ["demo", "manual", "auto"]:
    raise ValueError("MODE must be 'demo', 'manual', or 'auto'")

if AI_PROVIDER == "openai" and OPENAI_API_KEY == "your-openai-api-key-here":
    raise ValueError("Please set your OpenAI API key in config.py")

if AI_PROVIDER == "claude" and CLAUDE_API_KEY == "your-claude-api-key-here":
    raise ValueError("Please set your Claude API key in config.py")

# =============================================================================
# CONFIGURATION COMPLETE
# =============================================================================

print(f"🤖 Enhanced AI Trading Bot Configuration Loaded")
print(f"📊 AI Provider: {AI_PROVIDER.upper()}")
print(f"🎯 Trading Mode: {MODE.upper()}")
print(f"💰 Max Trade Amount: ${MAX_BUYING_AMOUNT_USD}")
print(f"📈 Portfolio Limit: {PORTFOLIO_LIMIT} positions")
print(f"🛡️ AI Confidence Threshold: {AI_CONFIDENCE_THRESHOLD}")
print(f"🌐 Dashboard: http://{FLASK_HOST}:{FLASK_PORT}")
print(f"⚠️  Remember: Always start with DEMO mode!")