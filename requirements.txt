# Enhanced AI Cryptocurrency Trading Bot - Requirements
# Professional-Grade Dependencies for AI-Powered Trading

# =============================================================================
# CORE FRAMEWORK
# =============================================================================
Flask==2.3.3
Flask-SocketIO==5.3.6
python-socketio==5.9.0
python-engineio==4.7.1

# =============================================================================
# AI PROVIDERS
# =============================================================================
# OpenAI Integration
openai==1.3.7

# Claude/Anthropic Integration
anthropic==0.7.8

# =============================================================================
# HTTP & API COMMUNICATION
# =============================================================================
requests==2.31.0
httpx==0.25.2
urllib3==2.0.7

# =============================================================================
# DATA PROCESSING & ANALYSIS
# =============================================================================
numpy==1.24.4
pandas==2.0.3
scipy==1.11.4

# =============================================================================
# TECHNICAL ANALYSIS
# =============================================================================
TA-Lib==0.4.28
yfinance==0.2.28
ccxt==4.1.64

# =============================================================================
# ASYNC & CONCURRENCY
# =============================================================================
aiohttp==3.9.1
aiofiles==23.2.1
asyncio==3.4.3

# =============================================================================
# LOGGING & MONITORING
# =============================================================================
loguru==0.7.2
coloredlogs==15.0.1

# =============================================================================
# CONFIGURATION & ENVIRONMENT
# =============================================================================
python-dotenv==1.0.0
PyYAML==6.0.1
configparser==6.0.0

# =============================================================================
# DATE & TIME HANDLING
# =============================================================================
pytz==2023.3.post1
dateutil==2.8.2
arrow==1.3.0

# =============================================================================
# SECURITY & ENCRYPTION
# =============================================================================
cryptography==41.0.7
bcrypt==4.1.2
PyJWT==2.8.0

# =============================================================================
# DATABASE (Optional)
# =============================================================================
SQLAlchemy==2.0.23
sqlite3==0.0.0  # Built-in with Python

# =============================================================================
# MATHEMATICAL & STATISTICAL
# =============================================================================
scikit-learn==1.3.2
statsmodels==0.14.0

# =============================================================================
# VISUALIZATION (Optional)
# =============================================================================
matplotlib==3.7.4
plotly==5.17.0

# =============================================================================
# UTILITIES
# =============================================================================
tqdm==4.66.1
click==8.1.7
rich==13.7.0

# =============================================================================
# DEVELOPMENT & TESTING (Optional)
# =============================================================================
pytest==7.4.3
pytest-asyncio==0.21.1
black==23.11.0
flake8==6.1.0

# =============================================================================
# WEB SCRAPING (Optional)
# =============================================================================
BeautifulSoup4==4.12.2
selenium==4.15.2

# =============================================================================
# PERFORMANCE MONITORING
# =============================================================================
psutil==5.9.6
memory-profiler==0.61.0

# =============================================================================
# JSON & DATA SERIALIZATION
# =============================================================================
orjson==3.9.10
ujson==5.8.0

# =============================================================================
# NETWORKING & WEBSOCKETS
# =============================================================================
websockets==12.0
websocket-client==1.6.4

# =============================================================================
# SYSTEM INTEGRATION
# =============================================================================
schedule==1.2.0
APScheduler==3.10.4

# =============================================================================
# COMPATIBILITY NOTES
# =============================================================================
# Python Version: 3.8+
# OS Support: Windows, macOS, Linux
# Architecture: x64, ARM64
#
# Installation Instructions:
# 1. pip install -r requirements.txt
# 2. For TA-Lib on Windows: pip install TA-Lib
# 3. For TA-Lib on macOS: brew install ta-lib && pip install TA-Lib
# 4. For TA-Lib on Linux: sudo apt-get install libta-lib-dev && pip install TA-Lib
#
# Optional Dependencies:
# - For advanced charting: pip install mplfinance
# - For machine learning: pip install tensorflow torch
# - For database support: pip install psycopg2-binary pymongo
#
# =============================================================================
# SECURITY CONSIDERATIONS
# =============================================================================
# Always use virtual environments:
# python -m venv trading_bot_env
# source trading_bot_env/bin/activate  # Linux/macOS
# trading_bot_env\Scripts\activate     # Windows
#
# Keep dependencies updated:
# pip install --upgrade -r requirements.txt
#
# Check for security vulnerabilities:
# pip install safety
# safety check
#
# =============================================================================
# PERFORMANCE OPTIMIZATION
# =============================================================================
# For production deployments, consider:
# - Using uvloop for better async performance
# - Installing Cython for numerical computations
# - Using Redis for caching and session management
# - Implementing connection pooling for database operations